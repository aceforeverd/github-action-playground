# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: "."
          pattern: "*.sh"
          exclude: "./.git/*"
  cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: reviewdog/action-cpplint@master
        with:
          github_token: ${{ secrets.github_token }}
          level: info
          reporter: github-pr-review
          flags: --linelength=80

  detect-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: detect-secrets
        uses: reviewdog/action-detect-secrets@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review # Change reporter.

  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: markdownlint
        uses: reviewdog/action-markdownlint@v0.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

  languagetool:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-languagetool@v1
        with:
          github_token: ${{ secrets.github_token }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-pr-review
          # Change reporter level if you need.
          level: info
  misspell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          locale: "US"
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run check style
        uses: nikitasavinov/checkstyle-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          tool_name: checkstyle
  flake8-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: flake8 Lint
        uses: reviewdog/action-flake8@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: info
          filter_mode: file

  any-previouse-job-fail:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: failed1
        id: failed1
        run: |
          echo "I failed"
          exit 1
      - name: failed2
        id: failed2
        run: |
          echo "I failed too"
          exit 2
      - name: always
        if: always()
        run: |
          echo failed1: ${{ steps.failed1.outcome }}, failed2: ${{ steps.failed2.outcome }}
          echo "if condition: ${{ steps.failed1.outcome != 'success' || steps.failed2.outcome != 'success' }}"
      - name: collect
        if: steps.failed1.outcome != 'success' || steps.failed2.outcome != 'success'
        run: |
          echo "wow~"

  env-variables:
    runs-on: ubuntu-latest
    env:
      FOO: bar
    steps:
      - uses: actions/checkout@v2

      - name: print variable
        # FOO or ${{ env.FOO }} both fine
        run: |
          echo "$FOO"
          echo ${{ env.FOO }}

      - name: new env
        run: |
          echo "BAR=bes" >> $GITHUB_ENV

      # new env variable is accessible in next step
      - name: print new env
        run: |
          echo "$BAR"
          echo ${{ env.BAR }}

      - name: env variable also ok to subprocess
        run: |
          ./print_var.sh

      # https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
      # - run: $FOO & ${{ env.FOO }}
      # - other key: only ${{ env.FOO }}
      # If you use the workflow file's run key to read environment variables from within the runner operating system (as shown in the example above), the variable is substituted in the runner operating system after the job is sent to the runner. For other parts of a workflow file, you must use the env context to read environment variables; this is because workflow keys (such as if) require the variable to be substituted during workflow processing before it is sent to the runner.
